（a）是合法的，后置递增运算符的优先级高于解引用运算符，其含义是解引用当前迭代器所处位置的对象内容，然后把迭代器的位置向后移动一位。

（b）是非法的，解引用 iter 得到 vector 对象当前的元素，结果是一个 string，显然 string 没有后置递增操作。

（c）是非法的，解引用运算符的优先级低于点运算符，所以该式先计算 iter.empty() ，而迭代器并没有定义 empty 函数，所以无法通过编译。

（d）是合法的，iter->empty(); 等价于 (*iter).empty(); 。解引用迭代器得到迭代器当前所指的元素，结果是一个 string，显然字符串可以判断是否为空，empty 函数在此有效。

（e）是非法的，前置递增运算符的优先级和解引用运算符的优先级相同，但表达式的结合性是自右向左（右结合律）。该式先解引用 iter，得到迭代器当前所指的元素，结果是一个 string，显然 string 没有前置递增操作。

（f）是合法的，后置递增运算符的优先级和成员访问运算符的优先级相同，但表达式的结合性是从左往右（左结合律）。iter++->empty(); 等价于 (*iter++).empty(); 。含义是解引用迭代器当前位置的对象内容，得到一个字符串，判断该字符串是否为空，然后把迭代器向后移动一位。